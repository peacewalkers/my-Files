{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red191\green100\blue38;\red32\green32\blue32;\red153\green168\blue186;
\red88\green118\blue71;\red254\green187\blue91;}
{\*\expandedcolortbl;;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c99608\c73333\c35686;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Ifthen()\
\
Switch statements : \
\
forEach(): elem.forEach(anon => \{\
	console.log(anon);		// statements goes here\
\});\
\
Declare new variables for function inside the scope;\
\
arr.filter(): \
* Remove array items with filter();\
* Array items can be filtered with forEach as well. So this can be ignored.\
\
Arr.map()\
Creates a new array with the results of calling a provided function.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f1\b \cf2 \cb3 const 
\f2\b0 \cf4 fruits = [\cf5 'apple'\cf2 , \cf5 'pear'\cf2 , \cf5 'cherry'\cf4 ]\cf2 ;\
\

\f1\b let 
\f2\b0 \cf4 capitalizedFruits = (fruits.\cf6 map\cf4 ( and => and.\cf6 toUpperCase\cf4 ()))\cf2 ;\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0 \cf0 \cb1 \
\
}